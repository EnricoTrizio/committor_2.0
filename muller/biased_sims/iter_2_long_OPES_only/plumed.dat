# vim:ft=plumed
UNITS NATURAL

# load interface for bias computation
#LOAD FILE=../../pytorch_model_bias.cpp
LOAD FILE=../../pytorch_model_bias.so

p: POSITION ATOM=1

# define potential
mueller: CUSTOM ARG=p.x,p.y PERIODIC=NO ...
  FUNC=0.15*(146.7-200*exp(-1*(x-1)^2+0*(x-1)*(y-0)-10*(y-0)^2)-100*exp(-1*(x-0)^2+0*(x-0)*(y-0.5)-10*(y-0.5)^2)-170*exp(-6.5*(x+0.5)^2+11*(x+0.5)*(y-1.5)-6.5*(y-1.5)^2)+15*exp(0.7*(x+1)^2+0.6*(x+1)*(y-1)+0.7*(y-1)^2))
...

# apply potential 
potential: BIASVALUE ARG=mueller

# committor and committor-based bias
z: PYTORCH_MODEL_BIAS FILE=../../../models/model_2_z.pt ARG=p.x,p.y LAMBDA=1 EPSILON=1e-7

q: CUSTOM ARG=z.node-0 var=z PERIODIC=NO FUNC=1/(1+exp(-3*z))

# this is the total Kolmogorov bias, we express it on z for numerical reasons
# bias: CUSTOM ARG=z.bias-0,q var=zbias,q PERIODIC=NO FUNC=-1*(zbias+2*log(q+1e-7)+2*log(1.0-q+1e-7))
# BIASVALUE ARG=bias

# opes bias
opes: OPES_METAD ARG=z.node-0 BARRIER=20 TEMP=1 PACE=500

# define walls
lwall: LOWER_WALLS ARG=p.x KAPPA=1000 AT=-1.3
uwall: UPPER_WALLS ARG=p.x KAPPA=1000 AT=+1.0

PRINT FMT=%g STRIDE=500 FILE=COLVAR ARG=*

ENDPLUMED